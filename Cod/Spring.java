package org.yourorghere;
/*
Класс пружины связывает две массы и прикладывает силу к каждой из этих масс
--------------------------------------------------------------------------------
Fпружины=-k*(x-d)
k - коэффициент жесткости
x - расстояние массы от точки до места присоединения
d - расстояние, при котором пружина будет устойчива
минус означает натяжение а не отталкивание

Если мы имеем 100 частиц и d=0.5м то имеем устойчивую веревку в 5метров
--------------------------------------------------------------------------------
Fтрения=-k*скорость
В формуле рассматривается только одна масса
нужно вычислить разницу между скоростями двух масс и 
получить относительную скорость
*/
public class Spring {
       public Mass mass1=new Mass(1.0);//первая масса - один конец пружины
       public Mass mass2=new Mass(1.0);;//вторая масса - второй конец пружины
       public double k=0;  //коэффициент жесткости пружины  
       public double d=0;//расстояние, при котором пружина будет устойчива
       public double f=0;//коэффициент трения пружины
       
       //конструктор
       Spring(
               Mass mass1,
               Mass mass2,
               double k,
               double d,
               double f
       ){
           this.k=k;
           this.d=d;
           this.f=f;
           this.mass1=mass1;
           this.mass2=mass2;
       }
//------------------------------------------------------------------------------
       //Применение силы
       //применяется сила упругости и трения
       void solve(){
           Vector3D springVector=mass1.pos.Sub(mass2.pos);//вектор между 2мя массами
           double r=springVector.length();
           Vector3D force=new Vector3D(0.0,0.0,0.0);//сила
           //применяем силу упругости пружины
           if(r!=0){
               //формула пружины:force = -k * (x - d) 
               //force += -(springVector / r) * (r - d) * k;
               //(springVector / r)  =вектор единичной длины между массами
               force=force.Add(springVector.Div(r).invert().Mult((r-d)*k));
            }
           //применяем силу трения:Fтрения=-k*скорость
           force=force.Add(mass1.speed.Sub(mass2.speed).invert().Mult(f));
           //добавляем силы к массам
           //Сила всегда действует на две массы в противоположных направлениях. 
            mass1.applyForce(force.GetNormalizeVector3D());
            mass2.applyForce(force.invert().GetNormalizeVector3D());
       }
       
}
